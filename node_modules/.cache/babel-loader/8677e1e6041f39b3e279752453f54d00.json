{"ast":null,"code":"var _jsxFileName = \"/Users/jessefurmanek/repos/personal/henry-keyboard/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction handleKeyDown(evt, setLetter) {\n  const letter = String.fromCharCode(evt.keyCode || evt.charCode);\n  setLetter(letter);\n  let utterance = new SpeechSynthesisUtterance(letter);\n  utterance.voice = getVoice();\n  window.speechSynthesis.speak(utterance);\n  return evt;\n}\n\nconst voices = window.speechSynthesis.getVoices();\n\nfunction getVoice() {\n  return voices[Date.now() % voices.length];\n}\n\nconst colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction getColor() {\n  return colors[Date.now() % colors.length];\n}\n\nfunction App() {\n  const [currentLetter, setLetter] = useState(null);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", evt => handleKeyDown(evt, setLetter));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: \"0\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Type a letter!\"), currentLetter && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 400,\n      textShadow: `10px 10px 15px ${getColor()}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, currentLetter)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jessefurmanek/repos/personal/henry-keyboard/src/App.js"],"names":["React","useEffect","useState","handleKeyDown","evt","setLetter","letter","String","fromCharCode","keyCode","charCode","utterance","SpeechSynthesisUtterance","voice","getVoice","window","speechSynthesis","speak","voices","getVoices","Date","now","length","colors","getColor","App","currentLetter","addEventListener","display","flexDirection","alignItems","justifyContent","fontSize","textShadow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,SAA5B,EAAuC;AACrC,QAAMC,MAAM,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,GAAG,CAACK,OAAJ,IAAeL,GAAG,CAACM,QAAvC,CAAf;AACAL,EAAAA,SAAS,CAACC,MAAD,CAAT;AACA,MAAIK,SAAS,GAAG,IAAIC,wBAAJ,CAA6BN,MAA7B,CAAhB;AACAK,EAAAA,SAAS,CAACE,KAAV,GAAkBC,QAAQ,EAA1B;AACAC,EAAAA,MAAM,CAACC,eAAP,CAAuBC,KAAvB,CAA6BN,SAA7B;AACA,SAAOP,GAAP;AACD;;AAED,MAAMc,MAAM,GAAGH,MAAM,CAACC,eAAP,CAAuBG,SAAvB,EAAf;;AAEA,SAASL,QAAT,GAAoB;AAClB,SAAOI,MAAM,CAACE,IAAI,CAACC,GAAL,KAAaH,MAAM,CAACI,MAArB,CAAb;AACD;;AAED,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,OAA5B,EAAqC,MAArC,EAA6C,QAA7C,EAAuD,QAAvD,CAAf;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,MAAM,CAACH,IAAI,CAACC,GAAL,KAAaE,MAAM,CAACD,MAArB,CAAb;AACD;;AAED,SAASG,GAAT,GAAe;AACb,QAAM,CAACC,aAAD,EAAgBrB,SAAhB,IAA6BH,QAAQ,CAAC,IAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACY,gBAAP,CAAwB,SAAxB,EAAmCvB,GAAG,IAAID,aAAa,CAACC,GAAD,EAAMC,SAAN,CAAvD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,QAAQ,EAAC,GAAd;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLuB,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,cAAc,EAAE;AAJX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,EASGL,aAAa,iBACZ;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,UAAU,EAAG,kBAAiBT,QAAQ,EAAG;AAA1D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,aADH,CAVJ,CADF,CADF;AAmBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction handleKeyDown(evt, setLetter) {\n  const letter = String.fromCharCode(evt.keyCode || evt.charCode);\n  setLetter(letter);\n  let utterance = new SpeechSynthesisUtterance(letter)\n  utterance.voice = getVoice()\n  window.speechSynthesis.speak(utterance)\n  return evt;\n}\n\nconst voices = window.speechSynthesis.getVoices()\n\nfunction getVoice() {\n  return voices[Date.now() % voices.length]\n}\n\nconst colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction getColor() {\n  return colors[Date.now() % colors.length];\n}\n\nfunction App() {\n  const [currentLetter, setLetter] = useState(null);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", evt => handleKeyDown(evt, setLetter));\n  }, []);\n\n  return (\n    <div tabIndex=\"0\" className=\"App\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div>Type a letter!</div>\n        {currentLetter && (\n          <div style={{ fontSize: 400, textShadow: `10px 10px 15px ${getColor()}` }}>\n            {currentLetter}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}